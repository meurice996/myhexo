<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>blog of meurice</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://meurice.xyz/"/>
  <updated>2020-07-16T05:46:41.034Z</updated>
  <id>http://meurice.xyz/</id>
  
  <author>
    <name>meurice</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[学习日志]2020 DIGIX全球校园AI算法精英大赛——赛道A</title>
    <link href="http://meurice.xyz/2020/07/16/%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97-2020-DIGIX%E5%85%A8%E7%90%83%E6%A0%A1%E5%9B%ADAI%E7%AE%97%E6%B3%95%E7%B2%BE%E8%8B%B1%E5%A4%A7%E8%B5%9B%E2%80%94%E2%80%94%E8%B5%9B%E9%A2%98A/"/>
    <id>http://meurice.xyz/2020/07/16/%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97-2020-DIGIX%E5%85%A8%E7%90%83%E6%A0%A1%E5%9B%ADAI%E7%AE%97%E6%B3%95%E7%B2%BE%E8%8B%B1%E5%A4%A7%E8%B5%9B%E2%80%94%E2%80%94%E8%B5%9B%E9%A2%98A/</id>
    <published>2020-07-16T04:23:28.000Z</published>
    <updated>2020-07-16T05:46:41.034Z</updated>
    
    <content type="html"><![CDATA[<p>7.20放赛题数据，先拿kaggle五年前的Click-Through Rate Prediction试水。</p><h5 id="2020-7-16"><a href="#2020-7-16" class="headerlink" title="2020.7.16"></a>2020.7.16<br></h5><h6 id="分块读取全部数据"><a href="#分块读取全部数据" class="headerlink" title="分块读取全部数据"></a>分块读取全部数据</h6>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">loop = <span class="literal">True</span></span><br><span class="line">chunkSize = <span class="number">1000000</span></span><br><span class="line">chunks = []</span><br><span class="line">index = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> loop:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(index)</span><br><span class="line">        chunk = train_data.get_chunk(chunkSize)</span><br><span class="line">        chunks.append(chunk)</span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">  <span class="keyword">except</span> StopIteration:</span><br><span class="line">        loop = <span class="literal">False</span></span><br><span class="line">        print(<span class="string">"Iteration is stopped."</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tqdm(chunks):</span><br><span class="line">    train_data = pd.concat(chunks, ignore_index=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h6 id="随机读取一定比例的数据"><a href="#随机读取一定比例的数据" class="headerlink" title="随机读取一定比例的数据"></a>随机读取一定比例的数据</h6>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> chunk <span class="keyword">in</span> pd.read_csv(train_data, chunksize=chunksize):</span><br><span class="line">    chunks += <span class="number">1</span></span><br><span class="line">    train = pd.concat([train, chunk.sample(frac=<span class="number">.05</span>, replace=<span class="literal">False</span>, random_state=<span class="number">42</span>)], axis=<span class="number">0</span>) </span><br><span class="line">    print(<span class="string">'Processing Chunk '</span> + str(chunks))</span><br></pre></td></tr></table></figure><h6 id="条件筛选修改"><a href="#条件筛选修改" class="headerlink" title="条件筛选修改"></a>条件筛选修改</h6>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'column_d'</span>].loc[df[<span class="string">'column_c'</span>] == <span class="number">0</span>] = <span class="number">0</span></span><br><span class="line"><span class="comment"># df['column_d'][df['column_c'] == 0] = 0</span></span><br></pre></td></tr></table></figure><h6 id="lightgbm-梯度提升决策树"><a href="#lightgbm-梯度提升决策树" class="headerlink" title="lightgbm 梯度提升决策树"></a>lightgbm 梯度提升决策树</h6>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">def model(train, test, features, pred, seed&#x3D;42, is_shuffle&#x3D;True):</span><br><span class="line">    train_pred &#x3D; np.zeros((train.shape[0],))</span><br><span class="line">    test_pred &#x3D; np.zeros((test.shape[0],))</span><br><span class="line">    n_splits &#x3D; 5</span><br><span class="line"></span><br><span class="line">    fold &#x3D; KFold(n_splits&#x3D;n_splits, shuffle&#x3D;is_shuffle, random_state&#x3D;seed)</span><br><span class="line">    kf_way &#x3D; fold.split(train[features])</span><br><span class="line"></span><br><span class="line">    params &#x3D; &#123;</span><br><span class="line">        &#39;learning_rate&#39;:         0.003,</span><br><span class="line">        &#39;boosting_type&#39;:        &#39;gbdt&#39;,</span><br><span class="line">        &#39;objective&#39;:            &#39;regression&#39;,</span><br><span class="line">        &#39;num_leaves&#39;:            36,</span><br><span class="line">        &#39;metric&#39;:               &#39;mse&#39;,</span><br><span class="line">        &#39;feature_fraction&#39;:      0.6,</span><br><span class="line">        &#39;bagging_fraction&#39;:      0.7,</span><br><span class="line">        &#39;bagging_freq&#39;:          6,</span><br><span class="line">        &#39;seed&#39;:                  42,</span><br><span class="line">        &#39;bagging_seed&#39;:          1,</span><br><span class="line">        &#39;feature_fraction_seed&#39;: 7,</span><br><span class="line">        &#39;min_data_in_leaf&#39;:      7,</span><br><span class="line">        &#39;nthread&#39;:               8,</span><br><span class="line">        &#39;verbose&#39;:               1,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    for n_fold, (train_idx, valid_idx) in enumerate(kf_way, start&#x3D;1):</span><br><span class="line">        train_x, train_y &#x3D; train[features].iloc[train_idx], train[pred].iloc[train_idx]</span><br><span class="line">        valid_x, valid_y &#x3D; train[features].iloc[valid_idx], train[pred].iloc[valid_idx]</span><br><span class="line"></span><br><span class="line">        n_train &#x3D; lgb.Dataset(train_x, label&#x3D;train_y)</span><br><span class="line">        n_valid &#x3D; lgb.Dataset(valid_x, label&#x3D;valid_y)</span><br><span class="line"></span><br><span class="line">        clf &#x3D; lgb.train(</span><br><span class="line">            params&#x3D;                params,</span><br><span class="line">            train_set&#x3D;             n_train,</span><br><span class="line">            num_boost_round&#x3D;       10000,</span><br><span class="line">            valid_sets&#x3D;            [n_valid],</span><br><span class="line">            early_stopping_rounds&#x3D; 150,</span><br><span class="line">            verbose_eval&#x3D;          100</span><br><span class="line">        )</span><br><span class="line">        train_pred[valid_idx] &#x3D; clf.predict(valid_x, num_iteration&#x3D;clf.best_iteration)</span><br><span class="line">        test_pred +&#x3D; clf.predict(test[features], num_iteration&#x3D;clf.best_iteration) &#x2F; fold.n_splits</span><br><span class="line"></span><br><span class="line">    test[&#39;label&#39;] &#x3D; test_pred</span><br><span class="line">    return test[[&#39;id&#39;, &#39;label&#39;]]</span><br></pre></td></tr></table></figure><p>　　</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;7.20放赛题数据，先拿kaggle五年前的Click-Through Rate Prediction试水。&lt;/p&gt;
&lt;h5 id=&quot;2020-7-16&quot;&gt;&lt;a href=&quot;#2020-7-16&quot; class=&quot;headerlink&quot; title=&quot;2020.7.16&quot;&gt;&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hexo+Nginx搭建静态页面博客</title>
    <link href="http://meurice.xyz/2020/07/15/ECS-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://meurice.xyz/2020/07/15/ECS-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-07-15T07:54:00.000Z</published>
    <updated>2020-07-16T03:51:16.764Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架，且支持 Markdown 语法。</p><p>• 本地环境配置：Node.js+Git+Hexo <br><br>• ECS环境配置：(CentOs 8) Node.js+Git+Pm2+Nginx <br><br>• 安全组配置：阿里云ECS <br><br>• 域名：腾讯云域名解析 <br><br>• Webhook：Github</p><h3 id="本地环境配置"><a href="#本地环境配置" class="headerlink" title="本地环境配置 "></a>本地环境配置 <br></h3><h4 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js "></a>Node.js <br></h4><p>　Node.js官网<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>，安装目录尽量不要包括空格，命令行下<code>node -v</code>验证是否安装成功。<br><br>　或通过<a href="https://npm.taobao.org/mirrors/node" target="_blank" rel="noopener">淘宝npm镜像</a>安装。</p><h4 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git<br></h4><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p>　Git官网 <a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a>，命令行<code>git --version</code>验证。</p><h5 id="SSH配置"><a href="#SSH配置" class="headerlink" title="SSH配置"></a>SSH配置</h5><p>　　配置Github用户名 <br><br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;example&quot;</span><br><span class="line">git config --global user.email &quot;example@email.com&quot;</span><br></pre></td></tr></table></figure><br>　　生成秘钥<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C &quot;example@email.com&quot;</span><br></pre></td></tr></table></figure></p><p>　　~/.ssh文件夹下生成id_rsa.pub公有密钥，依次进入Github——Settings——SSH and GPG keys，添加SSH key，将d_rsa.pub中的内容放入Key中。具体可以参考<a href="https://blog.csdn.net/playboyanta123/article/details/49611873?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase" target="_blank" rel="noopener">这篇文章</a>，Linux系统可以参考<a href="https://blog.csdn.net/qq_36663951/article/details/78749217?utm_medium=distribute.pc_relevant.none-task-blog-baidujs-1" target="_blank" rel="noopener">这篇文章</a>。</p><h4 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo<br></h4><p>　　npm全局安装<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure></p><p>　　验证<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -version</span><br></pre></td></tr></table></figure></p><p>　　新建文件夹用来存放Hexo代码，在该文件夹下执行命令行。<br>　　初始化Hexo，生成相关文件。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -init</span><br></pre></td></tr></table></figure></p><p>　　安装相关依赖<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></p><p>　　预览效果<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><br>　　浏览器进入<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><h4 id="发布到Github"><a href="#发布到Github" class="headerlink" title="发布到Github"></a>发布到Github<br></h4><p>　　安装git部署工具<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><br>　　修改_config.yml，repo字段修改为github仓库的SSH链接。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo:git@github.com:egname&#x2F;egrepo.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><br>　　代码上传至Github<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><h3 id="ECS环境配置"><a href="#ECS环境配置" class="headerlink" title="ECS环境配置 "></a>ECS环境配置 <br></h3><p>　　服务器为阿里云ECS云服务器，CentOS 8。</p><h4 id="Node-js-1"><a href="#Node-js-1" class="headerlink" title="Node.js"></a>Node.js<br></h4><p>　　采用yum方式安装<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https:&#x2F;&#x2F;rpm.nodesource.com&#x2F;setup_10.x | bash -</span><br><span class="line">yum install -y nodejs</span><br><span class="line"></span><br><span class="line">node -v # 验证</span><br></pre></td></tr></table></figure></p><h4 id="Git-1"><a href="#Git-1" class="headerlink" title="Git "></a>Git <br></h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install git</span><br><span class="line"></span><br><span class="line">git --version # 验证</span><br></pre></td></tr></table></figure><h5 id="SSH配置-1"><a href="#SSH配置-1" class="headerlink" title="SSH配置"></a>SSH配置<br></h5>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;example&quot;</span><br><span class="line">git config --global user.email &quot;example@email.com&quot;</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -b 4096 -C &quot;example@email.com&quot;</span><br></pre></td></tr></table></figure><p>　　复制公有密钥，在Github上添加新的SSH key，具体可参考上文本地配置。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;.ssh</span><br><span class="line">cat id_rsa.pub</span><br></pre></td></tr></table></figure><br>　　从Github仓库中克隆代码。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;</span><br><span class="line">mkdir www</span><br><span class="line"> </span><br><span class="line">cd www</span><br><span class="line">mkdir blog</span><br><span class="line"></span><br><span class="line">cd blog</span><br><span class="line">git clone git@github.com:egname&#x2F;egrepo.git</span><br></pre></td></tr></table></figure></p><h4 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx "></a>Nginx <br></h4><p>　　安装EPEL存储库<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install epel-release</span><br></pre></td></tr></table></figure></p><p>　　安装Nginx<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install nginx</span><br></pre></td></tr></table></figure><br>　　启动Nginx，设置自启动<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start nginx</span><br><span class="line">sudo systemctl enable nginx</span><br></pre></td></tr></table></figure></p><h5 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h5><p>　　进入etc/nginx文件夹下的nginx.conf<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;nginx&#x2F;nginx.conf</span><br></pre></td></tr></table></figure><br>　　修改配置文件<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name www.example.com;</span><br><span class="line">  root &#x2F;www&#x2F;blog&#x2F;example;</span><br><span class="line">  include &#x2F;etc&#x2F;nginx&#x2F;default.d&#x2F;*.conf;</span><br><span class="line">  </span><br><span class="line">  location &#x2F; &#123;</span><br><span class="line">    root &#x2F;www&#x2F;myBlog&#x2F;blog-web;</span><br><span class="line">    index index.jsp index.html index.htm;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>　　重启Nginx<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure></p><h3 id="安全组配置"><a href="#安全组配置" class="headerlink" title="安全组配置"></a>安全组配置</h3><p>　　以阿里云ECS为例。<br>　　进入控制台——网络与安全——安全组，添加入方向规则。<br>　　添加端口范围分别为80/80（HTTP），443/443（HTTPS），7777/7777（Webhook），授权对象均为0.0.0.0/0。</p><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p>　　以腾讯云为例。<br>　　DNS 解析 DNSPod——域名解析列表——选择域名——添加记录——快速添加网站解析——指定服务器主机IP（公网）。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架，且支持 Markdown 语法。&lt;/p&gt;
&lt;p&gt;• 本地环境配置：Node.js+Git+Hexo &lt;br&gt;&lt;br&gt;• ECS环境配置：(CentOs 8) Node.js+Git+Pm2+Nginx &lt;br&gt;&lt;br&gt;• 安全组配
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://meurice.xyz/2020/07/15/hello-world/"/>
    <id>http://meurice.xyz/2020/07/15/hello-world/</id>
    <published>2020-07-15T04:29:57.340Z</published>
    <updated>2020-07-15T04:29:57.340Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
